class Solution{
    public:
    void result( vector<vector<int>> &m, int n ,vector<string>&ans ,int row ,
    int col,vector<vector<int>>&visited,int di[] , int dj[] ,string s){
        
        if(row==n-1 and col==n-1){
            ans.push_back(s);
            return;
        }
        string direc="DLRU";
        for(int i=0;i<4;i++){
            int newi = row+di[i];
            int newj = col+dj[i];
            if(newi>=0 && newi<n && newj>=0 && newj<n && visited[newi][newj]==0
            && m[newi][newj]==1){
                visited[row][col]=1;
                result(m,n,ans,newi,newj,visited ,di,dj,s+direc[i]);
                visited[row][col]=0;
            }
        }
    }
    
    vector<string> findPath(vector<vector<int>> &m, int n) {
        // Your code goes here
        vector<string>ans;
        int di[]={1,0,0,-1};
        int dj[]={0,-1,1,0};
        vector<vector<int>>visited(n,vector<int>(n,0));
        if(m[0][0]==1) {result(m,n,ans,0,0,visited,di,dj,"");}
        return ans;
    }
};
